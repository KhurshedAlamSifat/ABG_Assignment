// <auto-generated />
using System;
using DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int?>("ProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductDescription = "Description 1",
                            ProductName = "Product 1",
                            ProductPrice = 10.0,
                            ProductQuantity = 100
                        },
                        new
                        {
                            ProductId = 2,
                            ProductDescription = "Description 2",
                            ProductName = "Product 2",
                            ProductPrice = 20.0,
                            ProductQuantity = 200
                        },
                        new
                        {
                            ProductId = 3,
                            ProductDescription = "Description 3",
                            ProductName = "Product 3",
                            ProductPrice = 30.0,
                            ProductQuantity = 300
                        },
                        new
                        {
                            ProductId = 4,
                            ProductDescription = "Description 4",
                            ProductName = "Product 4",
                            ProductPrice = 40.0,
                            ProductQuantity = 400
                        },
                        new
                        {
                            ProductId = 5,
                            ProductDescription = "Description 5",
                            ProductName = "Product 5",
                            ProductPrice = 50.0,
                            ProductQuantity = 500
                        });
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "admin",
                            Password = "admin123",
                            UserType = "Admin"
                        },
                        new
                        {
                            Username = "user",
                            Password = "user123",
                            UserType = "User"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
